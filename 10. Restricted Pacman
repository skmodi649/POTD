DATE : 29th September
Link : https://practice.geeksforgeeks.org/problems/2caf0501a39567d653197364a2b5c8a9f5943b7e/1
***************************************************************************************************************************************

Problem :
In the game of Restricted Pacman, an infinite linear path is given. Pacman has to start at position 0 and eat as many candies as possible. 
In one move he can only jump a distance of either M or N.  If M and N are coprime numbers, find how many candies will be left on the board after the game is over.
Note: The result is always finite as after a point X every index in the infinite path can be visited. 

Example 1:

Input: M = 2, N = 5
Output: 2
Explanation: From index 0, the indices that 
can be visited are
0 + 2 = 2
0 + 2 + 2 = 4
0 + 5 = 5
0 + 2 + 2 + 2 = 6
0 + 2 + 5 = 7
0 + 2 + 2 + 2 + 2 = 8
0 + 2 + 2 + 5 = 9
0 + 5 + 5 = 10
and so on.
1 and 3 are the only indices that cannot be 
visited. Therefore the candies at these two 
positions will be left on the board. 


Solution : Using a queue
int candies(int m, int n) 
    { 
    	// Your code goes here
    	queue<int> q;
    	unordered_set<int> s;
    	int x=m*n-(m+n);
    	int res=1;//for   position 1
    	q.push(x);
    	s.insert(x);
    	while(!q.empty())
    	{
    	    int temp=q.front();
    	    if((temp-m)>1 && s.find(temp-m)==s.end())
    	    {
    	        q.push(temp-m);
    	        s.insert(temp-m );
    	        
    	    }
    	    if((temp-n)>1 && s.find(temp-n)==s.end())
    	    {
    	        q.push(temp-n);
    	        s.insert(temp-n);
    	    }
    	    res++;
    	    q.pop();
    	}
    	
    	return res;
    	
    } 
