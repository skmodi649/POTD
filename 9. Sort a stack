DATE : 28th September
Link : https://practice.geeksforgeeks.org/problems/sort-a-stack/1
***********************************************************************************************************************************

Problem : 
Example 1:

Input:
Stack: 3 2 1
Output: 3 2 1
Example 2:

Input:
Stack: 11 2 32 3 41
Output: 41 32 11 3 2

Expected Time Complexity: O(N*N)
Expected Auxilliary Space: O(N) recursive.

Solution :

class GfG{
    public void sortedInsert(Stack<Integer> S , int element)
    {
        if((S.empty() == true) || (S.peek() < element))
        S.push(element);
        else
        {
            int temp = S.pop();
            sortedInsert(S , element);
            S.push(temp);
        }
    }
	public Stack<Integer> sort(Stack<Integer> s)
	{
	    if(s.empty() == false)
	    {
	        int temp = s.pop();
	        sort(s);
	       sortedInsert(s , temp);
	}
	return s;
}
}
