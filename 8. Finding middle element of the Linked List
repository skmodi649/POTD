DATE : 27th September
Link : https://practice.geeksforgeeks.org/problems/finding-middle-element-in-a-linked-list/1#
************************************************************************************************************************************\
Problem : 
Given a singly linked list of N nodes.
The task is to find the middle of the linked list. For example, if the linked list is
1-> 2->3->4->5, then the middle node of the list is 3.
If there are two middle nodes(in case, when N is even), print the second middle element.
For example, if the linked list given is 1->2->3->4->5->6, then the middle node of the list is 4.


1. First Approach(Mine) : 

class Solution
{
    int getMiddle(Node head)
    {
         int len = 0 , value = 0;
         Node temp = head;
         while(temp!=null)
         {
             len++;
             temp = temp.next;
         }
         int val = len / 2 + 1;
         Node t = head;
         while(t!=null && val!=0)
         {
             value = t.data;
             val--;
             t = t.next;
         }
         return value;
    }
}
