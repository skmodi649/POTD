DATE : 23rd September
Link : https://practice.geeksforgeeks.org/problems/count-total-set-bits-1587115620/1
**********************************************************************************************************************************************************************
TOPIC : BIT MAGIC
Problem : You are given a number N. Find the total count of set bits for all numbers from 1 to N(both inclusive).

Example 1:

Input: N = 4
Output: 5
Explanation:
For numbers from 1 to 4.
For 1: 0 0 1 = 1 set bits
For 2: 0 1 0 = 1 set bits
For 3: 0 1 1 = 2 set bits
For 4: 1 0 0 = 1 set bits
Therefore, the total set bits is 5.


1. First Approach(Own) :

class Solution{
    
    //Function to return sum of count of set bits in the integers from 1 to n.
    public static int countSetBits(int n){
        int count = 0 , i =1 , val = 0;
        while((n + 1) / (int)Math.pow(2,i) != 0)
        {
            int k = (n+1) % (int)Math.pow(2,i);
            val = (n+1) / (int)Math.pow(2,i);
            int c = (int)Math.pow(2,i-1);
            count+=c*val;
            if(k > ((int)Math.pow(2,i) / 2)){
                count+=k - ((int)Math.pow(2,i) / 2);
            }
            i++;
        }
        int temp = (int)Math.pow(2,i);
        count = count + (n + 1 - temp / 2);
        return count;
    }
}



2. Second Approach(Same but more organised) :

int countSetBits(int n)
   {
       // Your logic here
       int ans=0;
       for(int i=1;i<=n;){
           i*=2;
           int m=((n+1)/i);
           int r=(n+1)%i;
           int total=m*(i/2);
           if(r>(i/2))
               total+=(r-(i/2));
           ans+=total;    
       }
       return ans;
   }
   
   
   
   ***NOTE : Use GFG Hint as well as discussion portal for understanding the crux of the problem and then attempt it.
